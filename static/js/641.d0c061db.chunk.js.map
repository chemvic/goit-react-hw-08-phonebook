{"version":3,"file":"static/js/641.d0c061db.chunk.js","mappings":"sQA0DA,UAzCoB,WAClB,IAAMA,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IACpBC,GAASC,EAAAA,EAAAA,MACf,OACE,gCACGH,IACC,cACEI,MAAO,CACLC,SAAU,GACVC,MAAO,OAHX,SAMGN,IAIJL,EAAiBY,OAAS,GACxBT,IACC,SAAC,IAAD,UACGH,EAAiBa,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACpB,UAAC,KAAD,YACE,SAAC,IAAD,WACE,SAAC,IAAD,WAAQ,SAAC,IAAD,SAEV,SAAC,IAAD,CAAcC,QAASH,EAAMI,UAAWH,KACxC,SAAC,IAAD,CAAYI,KAAK,MAAM,aAAW,SAASC,QAAS,kBAAMb,GAASc,EAAAA,EAAAA,IAAc,CAACL,GAAAA,IAA9B,EAApD,UACE,SAAC,IAAD,QANWA,EADK,OAc1B,uBAAG,qCAIV,C,gICxDM,IAAMM,EAAc,SAAC,GAAD,SAAEC,SAAUC,KAAZ,EACdpB,EAAe,SAAC,GAAD,SAAEmB,SAAUpB,SAAZ,EACfG,EAAW,SAAC,GAAD,SAAEiB,SAAUlB,KAAZ,EAGXH,EAAsB,SAAC,GAA+B,IAApBsB,EAAmB,EAA7BD,SAAUC,MAAQC,EAAW,EAAXA,OACpD,OAAIA,EAGID,EACPC,QAAO,gBAAEX,EAAF,EAAEA,KAAMC,EAAR,EAAQA,OAAR,OACJD,EAAKY,cAAcC,SAASF,EAAOC,gBACjCX,EAAOY,SAASF,EAFd,IAHAD,CAML,C","sources":["components/ContactList/ContactList.jsx","redux/contacts/selectors.js"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport {deleteContact} from 'redux/contacts/operations';\nimport { getFilteredContacts } from 'redux/contacts/selectors';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { getError } from 'redux/contacts/selectors';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  IconButton,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PersonIcon from '@mui/icons-material/Person';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const dispatch=useDispatch();\n  return (\n    <>\n      {error && (\n        <p\n          style={{\n            fontSize: 32,\n            color: 'red',\n          }}\n        >\n          {error}\n        </p>\n      )}\n\n      {filteredContacts.length > 0 ? (\n        !isLoading && (\n          <List >\n            {filteredContacts.map(({ name, number, id }) => (\n              <ListItem key={id}>\n                <ListItemAvatar>\n                  <Avatar><PersonIcon/></Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={name} secondary={number} />\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => dispatch(deleteContact({id}))} >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItem>\n            ))}\n          </List>\n        )\n      ) : (\n        <p>There are no contacts by query</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","export const getContacts = ({contacts:{items}}) => items;\nexport const getIsLoading = ({contacts:{isLoading}}) => isLoading;\nexport const getError = ({contacts:{error}}) => error;\n\nexport const getFilter = ({filter}) => filter;\nexport const getFilteredContacts = ({contacts:{items}, filter}) =>{\n   if(!filter){\n    return items;\n   }\n    return items\n\t\t\t.filter(({name, number}) =>\n       name.toLowerCase().includes(filter.toLowerCase())\n       ||number.includes(filter));    \n     } \n"],"names":["filteredContacts","useSelector","getFilteredContacts","isLoading","getIsLoading","error","getError","dispatch","useDispatch","style","fontSize","color","length","map","name","number","id","primary","secondary","edge","onClick","deleteContact","getContacts","contacts","items","filter","toLowerCase","includes"],"sourceRoot":""}