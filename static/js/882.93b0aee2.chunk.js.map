{"version":3,"file":"static/js/882.93b0aee2.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.module.css","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/pages/Contacts/Contacts.module.css?4151","components/pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Contact_button__F+kJb\",\"contact_item\":\"Contact_contact_item__XbMYu\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport {deleteContact} from 'redux/contacts/operations';\nimport css from \"./Contact.module.css\";\n\nconst Contact=({name, number, id})=>{\nconst dispatch=useDispatch();\n\n    return(       \n        <li className={css.contact_item}>{name}: {number}\n        <button type=\"button\" className={css.button}\n        onClick={() => dispatch(deleteContact({id}))}>Delete</button>\n        </li>        \t\t\t\t\t\t   \n    )\n}\n\nContact.propTypes={\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n}\n\nexport default Contact;","export const getContacts = ({contacts:{items}}) => items;\nexport const getIsLoading = ({contacts:{isLoading}}) => isLoading;\nexport const getError = ({contacts:{error}}) => error;\n\nexport const getFilter = ({filter}) => filter;\nexport const getFilteredContacts = ({contacts:{items}, filter}) =>{\n   if(!filter){\n    return items;\n   }\n    return items\n\t\t\t.filter(({name, number}) =>\n       name.toLowerCase().includes(filter.toLowerCase())\n       ||number.includes(filter));    \n     } \n","import {  useSelector } from 'react-redux';\nimport css from \"./ContactList.module.css\";\nimport Contact from \"../Contact/Contact\";\n// import { getFilter } from '../../redux/selectors';\nimport { getFilteredContacts } from 'redux/contacts/selectors';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { getError } from 'redux/contacts/selectors';\n\n\n\n\nconst ContactList=()=>{\n  const filteredContacts=useSelector(getFilteredContacts);   \n  // const { data, isFetching, isSuccess, error } = useGetContactsQuery();\n  // const filter = useSelector(getFilter);  \n\n  // const filteredContacts = (contactsData, filterValue) =>{\n  //   if(!filter){\n  //    return data;\n  //   }\n  //    return data\n  //      .filter(({name, number}) =>\n  //       name.toLowerCase().includes(filter.toLowerCase())\n  //       ||number.includes(filter));    \n  //     } \n  //     const contacts=filteredContacts(data, filter);\n\n\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n    return(\n             <ul className={css.contacts}>\n                  {error&&<p style={{\n        fontSize:32,          \n        color: 'red'\n      }}>{error}</p>} \n              \n               {filteredContacts.length>0 ? !isLoading&&filteredContacts\n\t\t\t.map(({name, number, id}) => (\n      <Contact key={id} name={name} number={number}\n       id={id}/>\n            ))\n      :<p>There is no contacts by query</p>}   \n              \n       \n       </ul>\n    )\n}\n\nexport default ContactList;\n\n// import { useColorModeValue } from '@chakra-ui/color-mode';\n// import { Box, Text } from '@chakra-ui/react';\n// import { useSelector } from 'react-redux';\n// import { getFilter } from '../../redux/selectors';\n\n// const ContactList = () => {\n//   const filter = useSelector(getFilter);\n//   const contacts = useSelector((state) =>\n//     state.contacts.filter(({ name, number }) =>\n//       name.toLowerCase().includes(filter.toLowerCase()) ||\n//       number.includes(filter)\n//     )\n//   );\n\n//   const containerBgColor = useColorModeValue('gray.100', 'gray.700');\n//   const textColor = useColorModeValue('gray.600', 'gray.400');\n\n//   return (\n//     <Box py={8} px={4} bg={containerBgColor} borderRadius=\"md\">\n//       <Text fontSize=\"xl\" fontWeight=\"bold\" mb={4} color={textColor}>\n//         Contacts\n//       </Text>\n//       {contacts.length > 0 ? (\n//         <ul>\n//           {contacts.map(({ name, number, id }) => (\n//             <li key={id}>\n//               <Text>{name}: {number}</Text>\n//             </li>\n//           ))}\n//         </ul>\n//       ) : (\n//         <Text>No contacts found.</Text>\n//       )}\n//     </Box>\n//   );\n// };\n\n// export default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactForm_button__eSwX9\",\"form\":\"ContactForm_form__dhl+T\",\"form_lable\":\"ContactForm_form_lable__XbMyL\"};","import {useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport {addContact} from '../../redux/contacts/operations';\nimport css from \"./ContactForm.module.css\";\n\n\nconst ContactForm =()=>{\nconst[name,setName]=useState('');\nconst[number,setNumber]=useState('');\n\nconst handleInputChange=({ target: { name, value } }) => {\n  \n    switch(name){\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n};\nconst dispatch = useDispatch();\nconst contacts = useSelector(getContacts);\nconst handleSubmit = (event) => {   \n\t\t  event.preventDefault();     \n     \n      const newContact={\n        name,\n        number,\n     }; \n      if(contacts.find(({name, number}) => name.toLowerCase()===(newContact.name.toLowerCase())\n              ||number===newContact.number)){\n                alert(`${newContact.name} is already in contacts.`);\n                reset();\n                return;\n              } \n              dispatch(addContact(newContact));\n              reset();\n}\n\nconst reset=()=>{\nsetName('');\nsetNumber('');\n}\n \n    return (\n  <div> \n \n    <form className={css.form} onSubmit={handleSubmit}>\n       <label className={css.form_lable}>\n       <span>Name</span>\n       <input className={css.form_input}\ntype=\"text\"\nname=\"name\"\nvalue={name}\nonChange={handleInputChange}\nplaceholder='Enter name...'\npattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\ntitle=\"Name may contain only letters,\n apostrophe, dash and spaces.\n  For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\nrequired\n/>\n    </label>\n    <label className={css.form_lable}>\n    <span>Number</span>\n    <input className={css.form_input}\ntype=\"tel\"\nname=\"number\"\nvalue={number}\nonChange={handleInputChange}\nplaceholder='Enter phone number...'\npattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\ntitle=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\nrequired\n/>\n    </label>\n    \n    <button type=\"submit\" className={css.button}>Add contact</button>\n    </form>\n      \n  </div>\n);\n}\nexport default ContactForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { useState } from 'react';\n// import {\n//   useAddContactMutation,\n//   useGetContactsQuery,\n// } from '../../redux/contacts/contactsApi';\n// import {\n//   Box,\n//   Button,\n//   FormControl,\n//   FormLabel,\n//   Input,\n//   VStack,\n//   Heading,\n//   Text,\n// } from '@chakra-ui/react';\n// import { useColorModeValue } from '@chakra-ui/color-mode';\n\n// const ContactForm = () => {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n\n//   const handleInputChange = ({ target: { name, value } }) => {\n//     switch (name) {\n//       case 'name':\n//         setName(value);\n//         break;\n//       case 'number':\n//         setNumber(value);\n//         break;\n//       default:\n//         return;\n//     }\n//   };\n\n//   const [addNewContact] = useAddContactMutation();\n//   const { data } = useGetContactsQuery();\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const newContact = {\n//       name,\n//       number,\n//     };\n\n//     if (\n//       data.find(\n//         ({ name, number }) =>\n//           name.toLowerCase() === newContact.name.toLowerCase() ||\n//           number === newContact.number\n//       )\n//     ) {\n//       alert(`${newContact.name} is already in contacts.`);\n//       reset();\n//       return;\n//     }\n\n//     addNewContact(newContact);\n//     reset();\n//   };\n\n//   const reset = () => {\n//     setName('');\n//     setNumber('');\n//   };\n\n//   const formContainerBgColor = useColorModeValue('gray.100', 'gray.700');\n//   const headingColor = useColorModeValue('gray.800', 'gray.200');\n//   const textColor = useColorModeValue('gray.600', 'gray.400');\n\n//   return (\n//     <Box py={8} px={4} bg={formContainerBgColor} borderRadius=\"md\">\n//       <form onSubmit={handleSubmit}>\n//         <VStack spacing={4}>\n//           <Heading as=\"h2\" size=\"lg\" color={headingColor}>\n//             Add New Contact\n//           </Heading>\n//           <FormControl>\n//             <FormLabel color={textColor}>Name</FormLabel>\n//             <Input\n//               type=\"text\"\n//               name=\"name\"\n//               value={name}\n//               onChange={handleInputChange}\n//               placeholder=\"Enter name...\"\n//               required\n//             />\n//           </FormControl>\n//           <FormControl>\n//             <FormLabel color={textColor}>Number</FormLabel>\n//             <Input\n//               type=\"tel\"\n//               name=\"number\"\n//               value={number}\n//               onChange={handleInputChange}\n//               placeholder=\"Enter phone number...\"\n//               required\n//             />\n//           </FormControl>\n//           <Button type=\"submit\">Add Contact</Button>\n//         </VStack>\n//       </form>\n//     </Box>\n//   );\n// };\n\n// export default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter_lable\":\"Filter_filter_lable__8Z1vL\",\"filter_input\":\"Filter_filter_input__eu2zm\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {changeFilter} from '../../redux/filterSlice';\nimport css from \"./Filter.module.css\";\n\nconst Filter =()=>{\n    const dispatch = useDispatch();\n     \n    return(\n        <label className={css.filter_lable}>\n            <span>Find contacts by name or number</span>\n        <input className={css.filter_input}\n        type=\"text\" \n        onChange={(event) => {\n            dispatch(changeFilter(event.target.value));\n          }}\n        placeholder='Enter name or number for search ...'\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters,\n         apostrophe, dash and spaces.\n          For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n        </label>\n    )\n\n}\nexport default Filter;\n\n\n\n\n\n\n\n// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { changeFilter } from '../../redux/filterSlice';\n// import { Box, Input, useColorModeValue } from '@chakra-ui/react';\n\n// const Filter = () => {\n//   const [filter, setFilter] = useState('');\n//   const dispatch = useDispatch();\n\n//   const handleFilterChange = (event) => {\n//     setFilter(event.target.value);\n//     dispatch(changeFilter(event.target.value));\n//   };\n\n//   const inputBgColor = useColorModeValue('gray.100', 'gray.700');\n\n//   return (\n//     <Box py={8} px={4} bg={inputBgColor} borderRadius=\"md\">\n//       <Input\n//         type=\"text\"\n//         value={filter}\n//         onChange={handleFilterChange}\n//         placeholder=\"Enter name or number for search...\"\n//         required\n//       />\n//     </Box>\n//   );\n// };\n\n// export default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from \"./Loader.module.css\";\nimport { ThreeDots  } from  'react-loader-spinner'\n\n\nconst Loader=({visible})=>{\n   \n    return(\n       <div className={css.loader}> <ThreeDots \n        height=\"80\" \n        width=\"80\" \n        radius=\"9\"\n        color=\"#4fa94d\" \n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={visible}\n         />\n    </div>)\n       \n}\nLoader.propTypes={\n    visible: PropTypes.bool.isRequired\n}\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"contactsTitle\":\"Contacts_contactsTitle__FodYg\"};","import  ContactList  from '../../ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport  ContactForm  from '../../ContactForm';\nimport  Filter  from 'components/Filter/Filter';\nimport Loader from \"components/Loader/Loader\";\nimport {fetchContacts} from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selectors';\n\nimport css from \"./Contacts.module.css\";\n\n\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <><h1 className=\"title\">Phonebook</h1>\n\n    <ContactForm />\n     \n     <div className={css.contactsTitle}>\n     <h2 className=\"title\">Contacts</h2>\n     {isLoading&&<Loader visible={true}/>}\n      </div>    \n\n    \n\n      <Filter />  \n         <div>{isLoading && 'Request in progress...'}</div>\n         <ContactList/> \n     \n    </>\n    \n  );\n}"],"names":["name","number","id","dispatch","useDispatch","className","css","type","onClick","deleteContact","getContacts","contacts","items","getIsLoading","isLoading","getError","error","getFilteredContacts","filter","toLowerCase","includes","filteredContacts","useSelector","style","fontSize","color","length","map","useState","setName","setNumber","handleInputChange","target","value","reset","onSubmit","event","preventDefault","newContact","find","alert","addContact","onChange","placeholder","pattern","title","required","changeFilter","visible","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","Contacts","useEffect","fetchContacts"],"sourceRoot":""}